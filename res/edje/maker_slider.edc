#define POINT_WIDTH 20
#define POINT_SIZE 25

collections {
   base_scale: 2.6;
   images {
      image: "img_slider_bg.png" COMP;
      image: "ic_point.png" COMP;
      image: "ic_bar.png" COMP;
   }
   group { name: "main";
      parts {
         part { name: "slider_bg";
            scale: 1;
            description { state: "default" 0.0;
               rel1 {
                  relative: 1.0 0.25;
                  to_x: "padding.left";
                  to_y: "slider";
                  offset: -15 0;
               }
               rel2 {
                  relative: 0.0 0.75;
                  to_x: "padding.right";
                  to_y: "slider";
                  offset: 15 0;
               }
               image {
                  normal: "img_slider_bg.png";
                  border: 30 30 30 30;
               }
               color: 255 255 255 255;
            }
         }
         part { name: "padding.left";
            scale: 1;
            type: SPACER;
            description { state: "default" 0.0;
               rel2.relative: 0.0 1.0;
               align: 0 0;
               min: 80 0;
            }
         }
         part { name: "padding.right";
            scale: 1;
            type: SPACER;
            description { state: "default" 0.0;
               rel1.relative: 1.0 0.0;
               align: 1 0;
               min: 80 0;
            }
         }
         part { name: "slider";
            scale: 1;
            type: SWALLOW;
            description { state: "default" 0.0;
               rel1 {
                  relative: 1.0 0.5;
                  to_x: "padding.left";
               }
               rel2 {
                  relative: 0.0 0.5;
                  to_x: "padding.right";
               }
            }
         }
         part { name: "dragspace";
            scale: 1;
            type: SPACER;
            description { state: "default" 0.0;
               rel1 {
                  relative: 1.0 0.0;
                  to_x: "padding.left";
                  to_y: "slider_bg";
               }
               rel2 {
                  relative: 0.0 1.0;
                  to_x: "padding.right";
                  to_y: "slider_bg";
               }
            }
         }

         part { name: "start_clipper";
            type: RECT;
            scale: 1;
            description { state: "default" 0.0;
               rel1 {
                  relative: 0.0 0.26;
                  to: "slider";
               }
               rel2 {
                  relative: 1.0 0.74;
                  to_x: "start_bar";
                  to_y: "slider";
               }
               color: 249 249 249 255;
            }
         }
         part { name: "end_clipper";
            type: RECT;
            scale: 1;
            description { state: "default" 0.0;
               rel1 {
                  relative: 0.0 0.26;
                  to_x: "end_bar";
                  to_y: "slider";
               }
               rel2 {
                  relative: 1.0 0.74;
                  to: "slider";
               }
               color: 249 249 249 255;
            }
         }

         part { name: "start_bar";
            scale: 1;
            description { state: "default" 0.0;
               image.normal: "ic_bar.png";
               rel1 {
                  relative: 0 0;
                  to_x: "start_drag_point";
                  to_y: "dragspace";
                  offset: 0 -POINT_WIDTH/2;
               }
               rel2 {
                  relative: 0 1;
                  to_x: "start_drag_point";
                  to_y: "dragspace";
                  offset: 0 POINT_WIDTH/2;
               }
               min: POINT_WIDTH 0;
               align: 1.0 0.0;
               color: 28 70 177 255;
            }
            description { state: "fixed" 0.0;
               inherit: "default" 0.0;
               rel1 {
                  to: "end_bar";
                  offset: 0 0;
               }
               rel2 {
                  relative: 0 1;
                  to: "end_bar";
                  offset: 0 0;
               }
            }
         }
         /*
         part { name: "start_point";
            scale: 1;
            description { state: "default" 0.0;
               image.normal: "ic_point.png";
               rel1 {
                  to: "start_bar";
                  offset: 0 -POINT_SIZE/2;
               }
               rel2 {
                  relative: 1.0 0.0;
                  to: "start_bar";
               }
               min: POINT_SIZE POINT_SIZE;
               align: 0.5 1.0;
               color: 188 3 31 255;
            }
         }
         */
         part { name: "end_bar";
            scale: 1;
            description { state: "default" 0.0;
               image.normal: "ic_bar.png";
               rel1 {
                  relative: 1.0 0.0;
                  to_x: "end_drag_point";
                  to_y: "dragspace";
                  offset: 0 -POINT_WIDTH/2;
               }
               rel2 {
                  relative: 1.0 1.0;
                  to_x: "end_drag_point";
                  to_y: "dragspace";
                  offset: 0 POINT_WIDTH/2;
               }
               min: POINT_WIDTH 0;
               align: 0.0 0.0;
               color: 28 70 177 255;
            }
            description { state: "fixed" 0.0;
               inherit: "default" 0.0;
               rel1 {
                  relative: 1 0;
                  to: "start_bar";
                  offset: 0 0;
               }
               rel2 {
                  to: "start_bar";
                  offset: 0 0;
               }
            }
         }
         /*
         part { name: "end_point";
            scale: 1;
            description { state: "default" 0.0;
               image.normal: "ic_point.png";
               rel1 {
                  to: "end_bar";
                  offset: 0 -POINT_SIZE/2;
               }
               rel2 {
                  relative: 1.0 0.0;
                  to: "end_bar";
               }
               min: POINT_SIZE POINT_SIZE;
               align: 0.5 1.0;
               color: 91 221 55 255;
            }
         }
         */
         part { name: "start_drag_point";
            type: RECT;
            scale: 1;
            dragable {
               x: 1 1 0;
               confine: "dragspace";
            }
            description { state: "default" 0.0;
               min: 0 1;
               color: 0 255 0 0;
            }
         }
         part { name: "end_drag_point";
            type: RECT;
            scale: 1;
            dragable {
               x: -1 1 0;
               confine: "dragspace";
            }
            description { state: "default" 0.0;
               min: 0 1;
               color: 255 0 0 0;
            }
         }
         part { name: "start_drag_block";
            type: RECT;
            scale: 1;
            dragable {
               events: "start_drag_point";
            }
            description { state: "default" 0.0;
               rel1 {
                  relative: 0.9 0.5;
                  to: "start_bar";
                  offset: 0 -POINT_WIDTH*2;
               }
               rel2 {
                  relative: 0.9 0.5;
                  to: "start_bar";
                  offset: 0 POINT_WIDTH*2;
               }
               min: POINT_WIDTH*4 POINT_WIDTH*2;
               color: 0 0 0 0;
               align: 1.0 0.5;
            }
         }
         part { name: "end_drag_block";
            type: RECT;
            scale: 1;
            dragable {
               events: "end_drag_point";
            }
            description { state: "default" 0.0;
               rel1 {
                  relative: 0.1 0.5;
                  to: "end_bar";
                  offset: 0 -POINT_WIDTH*2;
               }
               rel2 {
                  relative: 0.1 0.5;
                  to: "end_bar";
                  offset: 0 POINT_WIDTH*2;
               }
               min: POINT_WIDTH*4 POINT_WIDTH*2;
               color: 0 0 0 0;
               align: 0.0 0.5;
            }
         }
         /*
         part { name: "start_point_big";
            scale: 1;
            description { state: "default" 0.0;
               image.normal: "ic_point.png";
               rel1 {
                  relative: 0.5 0.5;
                  to: "start_point";
               }
               rel2 {
                  relative: 0.5 0.5;
                  to: "start_point";
               }
               min: 0 0;
               color: 188 3 31 255;
            }
            description { state: "show" 0.0;
               inherit: "default" 0.0;
               min: POINT_SIZE*2 POINT_SIZE*2;
            }
         }
         part { name: "end_point_big";
            scale: 1;
            description { state: "default" 0.0;
               image.normal: "ic_point.png";
               rel1 {
                  relative: 0.5 0.5;
                  to: "end_point";
               }
               rel2 {
                  relative: 0.5 0.5;
                  to: "end_point";
               }
               min: 0 0;
               color: 91 221 55 255;
            }
            description { state: "show" 0.0;
               inherit: "default" 0.0;
               min: POINT_SIZE*2 POINT_SIZE*2;
            }
         }
         */
      }
      programs {
         /*
         program { 
            signal: "mouse,down,*";
            source: "start_drag_point";
            action: STATE_SET "show" 0.0;
            target: "start_point_big";
            transition: LINEAR 0.2;
         }
         program {
            signal: "mouse,up,*";
            source: "start_drag_point";
            action: STATE_SET "default" 0.0;
            target: "start_point_big";
            transition: LINEAR 0.2;
         }
         program {
            signal: "mouse,down,*";
            source: "end_drag_point";
            action: STATE_SET "show" 0.0;
            target: "end_point_big";
            transition: LINEAR 0.2;
         }
         program {
            signal: "mouse,up,*";
            source: "end_drag_point";
            action: STATE_SET "default" 0.0;
            target: "end_point_big";
            transition: LINEAR 0.2;
         }
         */
         program { 
            signal: "drag";
            source: "start_drag_point";
            script {
               new Float:sx, Float:sy;
               new Float:ex, Float:ey;
               get_drag(PART:"start_drag_point", sx, sy);
               get_drag(PART:"end_drag_point", ex, ey);

               if (sx > 1 - ex)
               set_state(PART:"start_bar", "fixed", 0.0);
               else
               set_state(PART:"start_bar", "default", 0.0);

               emit("start,point,drag", "");
            }
         }
         program { 
            signal: "drag,stop";
            source: "start_drag_point";
            script {
               new Float:sx, Float:sy;
               new Float:ex, Float:ey;
               get_drag(PART:"start_drag_point", sx, sy);
               get_drag(PART:"end_drag_point", ex, ey);

               if (sx > 1 - ex) {
                  set_drag(PART:"start_drag_point", 1 - ex, ey);
                  set_state(PART:"start_bar", "default",0.0);
               }
               emit("start,point,drag,stop", "");
            }
         }
         program { 
            signal: "drag";
            source: "end_drag_point";
            script {
               new Float:sx, Float:sy;
               new Float:ex, Float:ey;
               get_drag(PART:"start_drag_point", sx, sy);
               get_drag(PART:"end_drag_point", ex, ey);

               if (sx > 1 - ex)
               set_state(PART:"end_bar", "fixed", 0.0);
               else
               set_state(PART:"end_bar", "default", 0.0);

               emit("end,point,drag", "");
            }
         }
         program { 
            signal: "drag,stop";
            source: "end_drag_point";
            script {
               new Float:sx, Float:sy;
               new Float:ex, Float:ey;
               get_drag(PART:"start_drag_point", sx, sy);
               get_drag(PART:"end_drag_point", ex, ey);

               if (sx > 1 - ex) {
                  set_drag(PART:"end_drag_point", 1 - sx, sy);
                  set_state(PART:"end_bar", "default",0.0);
               }

            }
         }
      }
   }
}
